


ARM Macro Assembler    Page 1 


    1 00000000         ;******************************************************
    2 00000000         ;     È«¾Ö±äÁ¿
    3 00000000         ;******************************************************
    4 00000000         ;IMPORT rt_thread_switch_interrupt_flag
    5 00000000         ;IMPORT rt_interrupt_from_thread
    6 00000000         ;IMPORT rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;******************************************************
    9 00000000         ;     ³£Á¿
   10 00000000         ;******************************************************
   11 00000000         
   12 00000000         
   13 00000000         ;------------------------------------------------------
   14 00000000         ;ÓĞ¹ØÄÚºËÍâÉè¼Ä´æÆ÷¶¨Òå¿É²Î¿¼¹Ù·½ÎÄµµ
   15 00000000         ;ÏµÍ³¿ØÖÆ¿éÍâÉèSCBµØÖ··¶Î§£º0xE00DD00-0xE000ED3F
   16 00000000         ;------------------------------------------------------
   17 00000000         
   18 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ;ÏòÁ¿±íÆ«ÒÆ¼Ä´æÆ÷
   19 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ;ÖĞ¶Ï¿ØÖÆ×´Ì¬¼Ä´æÆ÷
                                                            
   20 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20  ;ÏµÍ³ÓÅÏÈ¼¶¼Ä´æÆ÷
   21 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000  ;PendSVÓÅÏÈ¼¶Öµ
   22 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ;´¥·¢PendSV excepti
                                                            onµÄÖµ
   23 00000000         
   24 00000000         ;******************************************************
   25 00000000         ;   ´úÂë²úÉúÖ¸Áî
   26 00000000         ;******************************************************
   27 00000000         
   28 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   29 00000000                 THUMB
   30 00000000                 REQUIRE8
   31 00000000                 PRESERVE8
   32 00000000         
   33 00000000                 IMPORT           rt_thread_switch_interrupt_flag
   34 00000000                 IMPORT           rt_interrupt_from_thread
   35 00000000                 IMPORT           rt_interrupt_to_thread
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         ;/*
   40 00000000         ; *---------------------------------------------------
   41 00000000         ; *---------------------------------------------------
   42 00000000         ; *void rt_hw_context_switch(rt_uint32 from, rt_uint32 t
                       o);
   43 00000000         ; *ro --> from
   44 00000000         ; *r1 --> to
   45 00000000         ; *---------------------------------------------------



ARM Macro Assembler    Page 2 


   46 00000000         ; */
   47 00000000         
   48 00000000         rt_hw_context_switch
                               PROC
   49 00000000                 EXPORT           rt_hw_context_switch
   50 00000000         ; ÉèÖÃÖĞ¶Ï±êÖ¾Î» rt_thread_switch_interrutpt_flag Îª1 
   51 00000000         ; ¼ÓÔØrt_thread_switch_interrupt_flag µÄµØÖ·µ½r2
   52 00000000         
   53 00000000 4A22            LDR              r2, = rt_thread_switch_interrup
t_flag
   54 00000002         ;¼ÓÔØrt_thread_switch_interrupt_flagµÄÖµµ½r3
   55 00000002 6813            LDR              r3, [r2]
   56 00000004         ;r3Óë1±È½Ï£¬ÏàµÈÔòÖ´ĞĞBEQÖ¸Áî£¬·ñÔò²»Ö´ĞĞ
   57 00000004 2B01            CMP              r3, #1
   58 00000006 D004            BEQ              _reswitch
   59 00000008         ;ÉèÖÃr3µÄÖµÎª1
   60 00000008 F04F 0301       MOV              r3, #1
   61 0000000C         ;½«r3µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag, ¼´ÖÃ1
   62 0000000C 6013            STR              r3, [r2]
   63 0000000E         
   64 0000000E         ;ÉèÖÃrt_interrupt_from_threadµÄÖµ
   65 0000000E         ;¼ÓÔØrt_interrupt_from_threadµÄµØÖ·µ½r2
   66 0000000E 4A20            LDR              r2, = rt_interrupt_from_thread
   67 00000010         ;´æ´¢r0µÄÖµµ½rt_interrupt_from_thread,¼´ÉÏÒ»¸öÏß³ÌÕ»Ö¸Õë
                       spµÄÖ¸Õë
   68 00000010 6010            STR              r0, [r2]
   69 00000012         
   70 00000012         _reswitch
   71 00000012         ;ÉèÖÃrt_interrupt_to_threadµÄÖµ
   72 00000012         ;¼ÓÔØrt_interrupt_from_threadµÄµØÖ·µ½r2
   73 00000012 4A20            LDR              r2, =rt_interrupt_to_thread
   74 00000014         ; ´æ´¢r1µÄÖµµ½rt_interrupt_from_thread,¼´ÏÂÒ»¸öÏß³ÌÕ»Ö¸Õ
                       ëspµÄÖ¸Õë
   75 00000014 6011            STR              r1, [r2]
   76 00000016         
   77 00000016         ;´¥·¢PsendSVÒì³££¬ÊµÏÖÉÏÏÂÎÄÇĞ»»
   78 00000016 4820            LDR              r0, =NVIC_INT_CTRL
   79 00000018 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   80 0000001C 6001            STR              r1,[r0]
   81 0000001E         ;×Ó³ÌĞò·µ»Ø
   82 0000001E 4770            BX               LR
   83 00000020         ;×Ó³ÌĞò½áÊø
   84 00000020                 ENDP
   85 00000020         
   86 00000020         
   87 00000020         ;/*
   88 00000020         ; *-----------------------------------------------------
                       
   89 00000020         ; * void PendSV_Handler(void);
   90 00000020         ; * r0 --> switch from thread stack
   91 00000020         ; * r1 --> switch to thread stack
   92 00000020         ; * psr, pc, lr, r12, r3, r2, r1, r0 are pushed into [fr
                       om] stack
   93 00000020         ; *-----------------------------------------------------
                       ---------
   94 00000020         ; */
   95 00000020         
   96 00000020         PendSV_Handler
                               PROC



ARM Macro Assembler    Page 3 


   97 00000020                 EXPORT           PendSV_Handler
   98 00000020         
   99 00000020         ;¹ØÖĞ¶Ï£¬ÎªÁË±£»¤ÉÏÏÂÎÄÇĞ»»²»±»ÖĞ¶Ï
  100 00000020 F3EF 8210       MRS              r2, PRIMASK
  101 00000024 B672            CPSID            I
  102 00000026         
  103 00000026         ;»ñÈ¡ÖĞ¶Ï±êÖ¾Î»£¬¿´¿´ÊÇ·ñÎ»0
  104 00000026         ; ¼ÓÔØrt_thread_switch_interrupt_flag µÄµØÖ·µ½r0
  105 00000026 4819            LDR              r0, =rt_thread_switch_interrupt
_flag
  106 00000028         ; ¼ÓÔØrt_thread_switch_interrupt_flagµÄÖµµ½r1
  107 00000028 6801            LDR              r1, [r0]
  108 0000002A         ; ÅĞ¶Ïr1ÊÇ·ñÎ»0£¬Îª0ÔòÌø×ªµ½pendsv_exit
  109 0000002A B191            CBZ              r1, pendsv_exit
  110 0000002C         
  111 0000002C         ;r1 ²»Îª0ÔòÇå0
  112 0000002C F04F 0100       MOV              r1, #0x00
  113 00000030         ;½« r1µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag,¼´Çå0
  114 00000030 6001            STR              r1, [r0]
  115 00000032         
  116 00000032         ;¼ÓÔØrt_interrupt_from_threadµÄµØÖ·µ½r0
  117 00000032 4817            LDR              r0, =rt_interrupt_from_thread
  118 00000034         ; ¼ÓÔØrt_interrupt_from_threadµÄÖµµ½r1
  119 00000034 6801            LDR              r1, [r0]
  120 00000036         ; ÅĞ¶Ïr1ÊÇ·ñÎª0£¬ Îª0ÔòÌø×ªµ½switch_to_thread
  121 00000036         ; µÚÒ»´ÎÏß³ÌÇĞ»»Ê±rt_interrupt_from_thread¿Ï¶¨Îª0£¬ÔòÌø×
                       ªµ½switch_to_thread
  122 00000036 B129            CBZ              r1, switch_to_thread
  123 00000038         
  124 00000038         ;===================== ÉÏÏÂÎÄ±£´æ ======================
                       =========================
  125 00000038         ; µ±½øÈë PendSVC HandlerÊ±£¬ÉÏÒ»¸öÏß³ÌÔËĞĞµÄ»·¾³¼´:
  126 00000038         ; xPSR, PC£¨Ïß³ÌÈë¿ÚµØÖ·), R14, R12, R3, R2, R1, R0(Ïß³Ì
                       µÄĞÎ²Î)
  127 00000038         ; ÕâĞ©cpu¼Ä´æÆ÷µÄÖµ»á×Ô¶¯±£´æµ½Ïß³ÌµÄÕ»ÖĞ£¬Ê£ÏÂµÄr4~r11Ğ
                       èÒªÊÖ¶¯±£´æ
  128 00000038         ; »ñÈ¡Ïß³ÌÕ»Ö¸Õëµ½r1
  129 00000038         
  130 00000038 F3EF 8109       MRS              r1, psp
  131 0000003C         ;½«CPU¼Ä´æÆ÷r4~r11µÄÖµ´æ´¢µ½r1Ö¸ÏòµÄµØÖ·(Ã¿²Ù×÷Ò»´ÎµØÖ·½
                       «µİ¼õÒ»´Î)
  132 0000003C E921 0FF0       STMFD            r1!, {r4 - r11}
  133 00000040         ; ¼ÓÔØr0Ö¸ÏòÖµµ½r0£¬¼´r0 = rt_interrupt_from_thread
  134 00000040 6800            LDR              r0, [r0]
  135 00000042         ; ½«r1µÄÖµ´æ´¢µ½r0£¬¼´¸üĞÂÏß³ÌÕ»sp
  136 00000042 6001            STR              r1, [r0]
  137 00000044         
  138 00000044         
  139 00000044         ; ================== ÉÏÏÂÎÄÇĞ»» ========================
                       =======================
  140 00000044         switch_to_thread
  141 00000044         ; ¼ÓÔØrt_interrupt_to_threadµÄµØÖ·µ½r1
  142 00000044         ; rt_interrupt_to_threadÊÇÒ»¸öÈ«¾Ö±äÁ¿£¬ÀïÃæ´æµÄÊÇÏß³ÌÕ»
                       Ö¸ÕëSPµÄÖ¸Õë
  143 00000044 4913            LDR              r1, = rt_interrupt_to_thread
  144 00000046         ;¼ÓÔØrt_interrupt_to_threadµÄÖµµ½r1£¬¼´spÖ¸ÕëµÄµØÖ·
  145 00000046 6809            LDR              r1, [r1]
  146 00000048         ;¼ÓÔØrt_interrupt_to_threadµÄÖµµ½r1£¬ ¼´sp
  147 00000048 6809            LDR              r1, [r1]



ARM Macro Assembler    Page 4 


  148 0000004A         
  149 0000004A         ;½«Ïß³ÌÕ»Ö¸Õër1(²Ù×÷Ö®Ç°ÏÈµİ¼õ)Ö¸ÏòµÄÄÚÈİ¼ÓÔØµ½CPU¼Ä´æÆ÷
                       r4~r11
  150 0000004A E8B1 0FF0       LDMFD            r1!, {r4 - r11}
  151 0000004E         ; ½«Ïß³ÌÕ»Ö¸Õë¸üĞÂµ½PSP
  152 0000004E F381 8809       MSR              psp, r1
  153 00000052         
  154 00000052         pendsv_exit
  155 00000052         ; »Ö¸´ÖĞ¶Ï
  156 00000052 F382 8810       MSR              PRIMASK, r2
  157 00000056         
  158 00000056         ; È·±£Òì³£·µ»ØÊ¹ÓÃµÄÕ»Ö¸ÕëÊÇPSP£¬¼´LR¼Ä´æÆ÷µÄÎ»2ÒªÎª1
  159 00000056 F04E 0E04       ORR              lr, lr, #0x04
  160 0000005A         ; Òì³£·µ»Ø£¬Õâ¸öÊ±ºòÕ»ÖĞÊ£ÏÂÄÚÈİ½«»á×Ô¶¯¼ÓÔØµ½CPU¼Ä´æÆ÷£
                       º
  161 0000005A         ; xPSR£¬PC£¨Ïß³ÌÈë¿ÚµØÖ·), R14, R12,R3,R2,R1,R0(Ïß³ÌµÄĞÎ
                       ²Î)
  162 0000005A 4770            BX               lr
  163 0000005C         
  164 0000005C         ; PensSV_Handler ×Ó³ÌĞò½áÊø
  165 0000005C                 ENDP
  166 0000005C         
  167 0000005C         ;/*
  168 0000005C         ; *----------------------------------------------------
  169 0000005C         ; * º¯ÊıÔ­ĞÍ£ºvoid rt_hw_context_switch_to(rt_uint32_t t
                       o);
  170 0000005C         ; * r0 --> to
  171 0000005C         ; * ¸Ãº¯ÊıÓÃÓÚ¿ªÆôµÚÒ»´ÎÏß³ÌÇĞ»»
  172 0000005C         ; *-----------------------------------------------------
                       
  173 0000005C         ; *-----------------------------------------------------
                       
  174 0000005C         ; */
  175 0000005C         
  176 0000005C         rt_hw_context_switch_to
                               PROC
  177 0000005C         
  178 0000005C         ;µ¼³ö rt_hw_context_switch_to, ÈÃÆä¾ßÓĞÈ«¾ÖÊôĞÔ£¬¿ÉÒÔÔÙC
                       ÎÄ¼şµ÷ÓÃ
  179 0000005C                 EXPORT           rt_hw_context_switch_to
  180 0000005C         
  181 0000005C         ; ÉèÖÃrt_interrupt_to_threadµÄÖµ
  182 0000005C         ; ½«rt_interrupt_to_threadµÄµØÖ·¼ÓÔØµ½r1
  183 0000005C 490D            LDR              r1, = rt_interrupt_to_thread
  184 0000005E         ; ½«r0µÄÖµ´æ´¢µ½rt_interrupt_to_thread
  185 0000005E 6008            STR              r0, [r1]
  186 00000060         
  187 00000060         ; ÉèÖÃrt_interrupt_from_threadµÄÖµÎª0£¬±íÊ¾Æô¶¯µÚÒ»´ÎÏß³
                       ÌÇĞ»»
  188 00000060         ; ½«rt_interrupt_from_threadµÄµØÖ·¼ÓÔØµ½r1
  189 00000060 490B            LDR              r1, =rt_interrupt_from_thread
  190 00000062         ; ÅäÖÃr0µÈÓÚ0
  191 00000062 F04F 0000       MOV              r0, #0x0
  192 00000066         ; ½«r0µÄÖµ´æ´¢µ½rt_interrupt_from_thread
  193 00000066 6008            STR              r0, [r1]
  194 00000068         
  195 00000068         ; ÉèÖÃÖĞ¶Ï±êÖ¾Î»rt_thread_switch_interrupt_flag µÄÖµÎ»1
  196 00000068         ; ½«rt_thread_switch_interrupt_flagµÄµØÖ·¼ÓÔØµ½r1
  197 00000068 4908            LDR              r1, =rt_thread_switch_interrupt



ARM Macro Assembler    Page 5 


_flag
  198 0000006A         ;ÅäÖÃr0µÈÓÚ1
  199 0000006A F04F 0001       MOV              r0, #1
  200 0000006E         ;½«r0µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag
  201 0000006E 6008            STR              r0, [r1]
  202 00000070         
  203 00000070         ;ÉèÖÃPsendSVÒì³£µÄÓÅÏÈ¼¶
  204 00000070 480A            LDR              r0, =NVIC_SYSPRI2
  205 00000072 F44F 017F       LDR              r1, = NVIC_PENDSV_PRI
  206 00000076 F8D0 2000       LDR.w            r2, [r0, #0x00] ;¶Á
  207 0000007A EA41 0102       ORR              r1, r1, r2  ;¸Ä
  208 0000007E 6001            STR              r1, [r0]    ;Ğ´
  209 00000080         
  210 00000080         ; ´¥·¢PsendSVÒì³£(²úÉúÉÏÏÂÎÄÇĞ»»)
  211 00000080 4805            LDR              r0, =NVIC_INT_CTRL
  212 00000082 F04F 5180       LDR              r1, =NVIC_PENDSVSET
  213 00000086 6001            STR              r1, [r0]
  214 00000088         
  215 00000088         ;¿ªÖĞ¶Ï
  216 00000088 B661            CPSIE            F
  217 0000008A B662            CPSIE            I
  218 0000008C         
  219 0000008C         ;ÓÀÔ¶²»»áµ½ÕâÀï
  220 0000008C                 ENDP
  221 0000008C         
  222 0000008C                 ALIGN            4
  223 0000008C         
  224 0000008C                 END
              00000000 
              00000000 
              00000000 
              E000ED04 
              E000ED20 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Ta
rget_1 -ID:\software_intstall\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -I
D:\software_intstall\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\D
evice\ST\STM32F4xx\Include --predefine="__UVISION_VERSION SETA 524" --predefine
="_RTE_ SETA 1" --predefine="STM32F429xx SETA 1" --list=.\listings\context_rvds
.lst ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 28 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      None
Comment: .text unused
PendSV_Handler 00000020

Symbol: PendSV_Handler
   Definitions
      At line 96 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 97 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: PendSV_Handler used once
_reswitch 00000012

Symbol: _reswitch
   Definitions
      At line 70 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 58 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: _reswitch used once
pendsv_exit 00000052

Symbol: pendsv_exit
   Definitions
      At line 154 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 109 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: pendsv_exit used once
rt_hw_context_switch 00000000

Symbol: rt_hw_context_switch
   Definitions
      At line 48 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 49 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 0000005C

Symbol: rt_hw_context_switch_to
   Definitions
      At line 176 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 179 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: rt_hw_context_switch_to used once
switch_to_thread 00000044

Symbol: switch_to_thread
   Definitions
      At line 140 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 122 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: switch_to_thread used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 19 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 78 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 211 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 22 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 79 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 212 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 21 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 205 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 20 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 204 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 18 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 34 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 66 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 117 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 189 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 35 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 73 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 143 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 183 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 33 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
   Uses
      At line 53 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 105 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S
      At line 197 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m4\context_rvds.S

3 symbols
351 symbols in table
